.\" dummy line
.TH MZSCHEME 1 "31 May 1997"
.UC 4
.SH NAME
mzscheme \- The PLT Scheme implementation
.SH SYNOPSIS
.B mzscheme
[
.I flags
] [
.I arguments
]
.SH DESCRIPTION
.I MzScheme
is the Rice University PLT
Scheme implementation.  It implements the language as
described in the
.I Revised^4 Report on
.I the Algorithmic Language Scheme,
plus numerous extensions.
.I MzScheme
is the underlying implementation for
.I DrScheme
and
.I MrEd.
.SH OPTIONS

Startup file and expression switches:
.TP
.BI \-e \ expr
Evaluates
.I expr
after
.I MzScheme
starts.
.TP
.BI \-f \ file
Loads
.I file
after
.I MzScheme
starts.
.TP
.BI \-d \ file
Load/cds
.I file
after
.I MzScheme
starts.
.TP
.B \-F
.br
Loads all remaining arguments after
.I MzScheme
starts.
.TP
.B \-D
.br
Load/cds all remaining arguments after
.I MzScheme
starts.
.TP
.B \-l \ file
Same as -e '(require-library "file")'.
.TP
.B \-r, --script
Script mode: use as last flag for scripts.
Same as -fmv-.
.TP
.B \-i, --script-cd
Like -r, but also sets the directory.
Same as -dmv-.
.TP
.B \-w, --awk
Same as -l awk.ss.
.PP

Initialization switches:
.TP
.B \-x, --no-lib-path
Does not try to set current-library-collection-paths.
.TP
.B \-q, --no-init-file
Does not try to load "~/.mzschemerc".
.PP

Language setting switches:
.TP
.B \-g, --case-sens
Identifiers and symbols are initially case-sensitive.
.TP
.B \-c, --esc-cont
Call/cc is replaced with call/ec.
.TP
.B \-k, --const-globs
Builtin globals are constant.
.TP
.B \-s, --set-undef
Set! works on undefined identifiers.
.TP
.B \-a, --no-auto-else
Fall-through cond or case is an error.
.TP
.B \-n, --no-key
Keywords are not enforced.
.TP
.B \-y, --hash-percent-syntax
Only #% syntactic forms are present.
.TP
.B \-p, --persistent
Catches AIX SIGDANGER (low page space) signal. (AIX only)
.PP

Miscellaneous switches:
.TP
.B \--
.br
No argument following this switch is used as a switch.
.TP
.B \-m, --mute-banner
Suppresses the startup banner.
.TP
.B \-v, --version
Suppresses the read-eval-print loop.
.TP
.B \-h, --help
Shows help for command-line arguments.
.TP
.BI \-R file, --restore \ file
Restores an image; must be the only switch.
.PP
Multiple single-letter switches can be collapsed, with arguments placed
after the collapsed switches; the first collapsed switch cannot be --.
E.g.: `-vfme file expr' is the same as `-v -f file -m -e expr'.
.PP
Extra arguments following the last switch are put into the Scheme global
variable `argv' as a vector of strings. The name used to start 
.I MzScheme
is put into the global variable `program' as a string.
.PP
Extra arguments after a `--restore' file are returned as a vector of
strings to the continuation of the `write-image-to-file' call that created
the image.
.PP
Expressions/files are evaluated/loaded in order as provided.
.PP
The current-library-collections-path is automatically set before any
expressions/files are evaluated/loaded, unless the -x or --no-lib-path
switch is used.  
.PP
.PP
For further information on
.I MzScheme,
please consult the on-line
documentation and other information available at
.PP
.ce 1
http://www.cs.rice.edu/CS/PLT/packages/mzscheme/
.SH FILES
The file "~/.mzschemerc" is loaded before any provided
expressions/files are evaluated/loaded, unless the -q or 
--no-init-file switch is used. (Under Windows and MacOS, "mzscheme.rc" 
is loaded from the start-up working directory.)
.PP
.I MzScheme
looks for the library collections directory using the 
following search path:
.IP
If
.I MzScheme
was invoked with an absolute pathname, the directory
of the invoked executable is checked. If the executable 
is a link, the directory of the referenced file is also 
checked, recursively following links.
.IP
If
.I MzScheme
is invoked with a relative pathname, the
directories in the PATH environment variable containing
a file with the name of the program as invoked (usually
"mzscheme") are checked. Links are followed as in the 
first case.
.IP
The path in the environment variable MZCOLS is tried.
.IP
The path in the environment variable PLTHOME is checked
for a "mzscheme" and then "collects" subdirectory.
.IP
The "/usr/local/lib/plt/mzscheme/collects" directory is 
tried.
.PP
Please consult your local administrator to determine whether
the on-line documentation has been installed locally.
.SH BUGS
Submit bug reports via
.ce 1
http://www.cs.rice.edu/CS/PLT/Gnats/ (encouraged)
or by e-mail to
.ce 1
plt-bugs@cs.rice.edu (discouraged)
.SH AUTHOR
.I MzScheme
was implemented by Matthew Flatt (mflatt@cs.rice.edu).
It uses the conservative garbage collector implemented by Hans 
Boehm and extended by John Ellis. MzScheme was originally based 
on libscheme, written by Brent Benson.
.SH SEE ALSO
.BR drscheme(1),
.BR mred(1)
